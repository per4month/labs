#include <iostream>
#include <fstream>

#include "SignedBigFloat.h"
#include "Test.h"
using namespace std;

int main()
{
	Test test;
	cout << "|||||||||||||||||Class BigFloat||||||||||||||||||" << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 1 (BigFloat default constructor)" << endl;
	cout << test.test_constructror_bigfloat_default() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 2 (BigFloat long constructor)" << endl;
	cout << test.test_constructror_bigfloat_long() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 3 (BigFloat char* constructor)" << endl;
	cout << test.test_constructror_bigfloat_char() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 4 (BigFloat copy constructor)" << endl;
	cout << test.test_constructror_bigfloat_copy() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 5 (BigFloat add null)" << endl;
	cout << test.test_bigfloat_add_null() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 6 (BigFloat add number #1)" << endl;
	cout << test.test_bigfloat_add_number1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 7 (BigFloat add number #2)" << endl;
	cout << test.test_bigfloat_add_number2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 8 (BigFloat deduct numbers equal)" << endl;
	cout << test.test_bigfloat_deduct_number_equal() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 9 (BigFloat deduct number #1)" << endl;
	cout << test.test_bigfloat_deduct_number1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 10 (BigFloat deduct number #2)" << endl;
	cout << test.test_bigfloat_deduct_number2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 11 (BigFloat multiply null)" << endl;
	cout << test.test_bigfloat_mult_null() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 12 (BigFloat multiply number#1)" << endl;
	cout << test.test_bigfloat_mult_number1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 13 (BigFloat multiply number#2)" << endl;
	cout << test.test_bigfloat_mult_number2() << endl;
	cout << "---------------------------------" << endl;
	cout << "||||||||||||||Class SignedBigFloat|||||||||||||||" << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 14 (SignedBigFloat default constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_default() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 15 (SignedBigFloat positive long constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_positive_long() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 16 (SignedBigFloat negative long constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_negative_long() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 17 (SignedBigFloat positive char* constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_positive_char() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 18 (SignedBigFloat negative char* constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_negative_char() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 19 (SignedBigFloat copy constructor)" << endl;
	cout << test.test_constructror_signedbigfloat_copy() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 20 (SignedBigFloat positive add positive)" << endl;
	cout << test.test_signedbigfloat_pos_add_pos() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 21 (SignedBigFloat negative add positive (abs(obj1) > abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_add_pos1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 22 (SignedBigFloat negative add positive (abs(obj1) < abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_add_pos2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 23 (SignedBigFloat positive add negative (abs(obj1) > abs(obj2))" << endl;
	cout << test.test_signedbigfloat_pos_add_neg1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 24 (SignedBigFloat positive add negative (abs(obj1) < abs(obj2))" << endl;
	cout << test.test_signedbigfloat_pos_add_neg2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 25 (SignedBigFloat negative add negative)" << endl;
	cout << test.test_signedbigfloat_neg_add_neg() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 26 (SignedBigFloat positive deduct positive (abs(obj1) > abs(obj2))" << endl;
	cout << test.test_signedbigfloat_pos_ded_pos1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 27 (SignedBigFloat positive deduct positive (abs(obj1) < abs(obj2))" << endl;
	cout << test.test_signedbigfloat_pos_ded_pos2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 28 (SignedBigFloat negative deduct positive (abs(obj1) > abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_ded_pos1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 29 (SignedBigFloat negative deduct positive (abs(obj1) < abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_ded_pos2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 30 (SignedBigFloat positive deduct negative)" << endl;
	cout << test.test_signedbigfloat_pos_ded_neg() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 31 (SignedBigFloat negative deduct negative (abs(obj1) > abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_ded_neg1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 32 (SignedBigFloat negative deduct negative (abs(obj1) < abs(obj2))" << endl;
	cout << test.test_signedbigfloat_neg_ded_neg2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 33 (SignedBigFloat positive multiply positive#1)" << endl;
	cout << test.test_signedbigfloat_pos_mult_pos1() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 34 (SignedBigFloat positive multiply positive#2)" << endl;
	cout << test.test_signedbigfloat_pos_mult_pos2() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 35 (SignedBigFloat negative multiply positive)" << endl;
	cout << test.test_signedbigfloat_neg_mult_pos() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 36 (SignedBigFloat positive multiply negative)" << endl;
	cout << test.test_signedbigfloat_pos_mult_neg() << endl;
	cout << "---------------------------------" << endl;
	cout << "Test 37 (SignedBigFloat negative multiply negative)" << endl;
	cout << test.test_signedbigfloat_neg_mult_neg() << endl;
	cout << "---------------------------------" << endl;
	cout << "Successful tests: " << test.suc << endl;
	cout << "Failed tests: " << test.fail << endl;
	cin.get();
}


